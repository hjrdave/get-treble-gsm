{"version":3,"sources":["webpack:///./src/components/post-link/post-link.jsx","webpack:///./src/components/post-link/index.jsx","webpack:///./src/pages/blog.jsx"],"names":["PostLink","post","Card","className","Body","Title","to","frontmatter","path","title","Subtitle","date","Text","pageQuery","BlogPage","edges","data","allMarkdownRemark","filter","edge","node","map","key","id"],"mappings":"qJAsBeA,ICpBAA,EDEf,YAA6B,IAATC,EAAQ,EAARA,KAElB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,QACd,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAY,kBAAC,OAAD,CAAMC,GAAIL,EAAKM,YAAYC,MAAOP,EAAKM,YAAYE,QAC/D,kBAACP,EAAA,EAAKQ,SAAN,CAAeP,UAAU,mBAAmBF,EAAKM,YAAYI,MAC7D,kBAACT,EAAA,EAAKU,KAAN,mF,wBEZV,0CA8BO,IAAMC,EAAS,aAkBPC,UAxCf,YAA+D,IAAdC,EAAa,EAA1CC,KAAQC,kBAAqBF,MAE/C,OACE,oCACE,kBAAC,IAAD,CAAeN,MAAO,QACpB,kBAAC,IAAD,KACE,oCACA,wBAAIN,UAAU,QAAd,gBAEEY,EAAMG,QAAO,SAACC,GAAD,QAAYA,EAAKC,KAAKb,YAAYI,QAC5CU,KAAI,SAACF,GACJ,OAAO,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAItB,KAAMkB,EAAKC","file":"component---src-pages-blog-jsx-9acf361042641e472e51.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\";\nimport Card from 'react-bootstrap/Card';\n\nfunction PostLink({ post }) {\n\n  return (\n    <>\n      <Card className='mt-3'>\n        <Card.Body>\n          <Card.Title><Link to={post.frontmatter.path}>{post.frontmatter.title}</Link></Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{post.frontmatter.date}</Card.Subtitle>\n          <Card.Text>\n            With supporting text below as a natural lead-in to additional content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n\n\nexport default PostLink","import PostLink from './post-link';\n\nexport default PostLink;","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport PostLink from \"../components/post-link\";\nimport PageContainer from '../components/page-container';\nimport PageContent from '../components/page-content';\n\n\n\nfunction BlogPage({ data: { allMarkdownRemark: { edges } } }) {\n\n  return (\n    <>\n      <PageContainer title={'Blog'}>\n        <PageContent>\n          <h1>Blog</h1>\n          <h3 className='pt-4'>Recent Posts</h3>\n          {\n            edges.filter((edge) => !!edge.node.frontmatter.date)\n              .map((edge) => {\n                return <PostLink key={edge.node.id} post={edge.node} />\n              })\n          }\n\n        </PageContent>\n      </PageContainer>\n    </>\n  )\n}\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPage\n"],"sourceRoot":""}