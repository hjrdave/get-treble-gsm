{"componentChunkName":"component---src-templates-post-template-jsx","path":"/api/setup","result":{"data":{"markdownRemark":{"html":"<p>It is Treble's goal to provide an easy and quick setup.  Below are the steps needed to get Treble setup in your app, so you can start managing state like a boss.</p>\n<h3 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h3>\n<p>First install Treble in your app.  You can get more information about this package from <a href=\"https://www.npmjs.com/package/treble-gsm\">npm</a> or <a href=\"https://classic.yarnpkg.com/en/package/treble-gsm\">yarn</a>. Node.js must be installed globally and locally in your project first. You can download node.js <a href=\"https://nodejs.org/en/\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">npm install treble-gsm</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">yarn add treble-gsm</code></pre></div>\n<h3 id=\"treble-store\" style=\"position:relative;\"><a href=\"#treble-store\" aria-label=\"treble store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Treble Store</h3>\n<p>The Store is a file that will act as the central place for shared state in your app. </p>\n<blockquote>\n<h5 id=\"a-note-about-treble-global-state-principles\" style=\"position:relative;\"><a href=\"#a-note-about-treble-global-state-principles\" aria-label=\"a note about treble global state principles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Note About Treble Global State Principles</h5>\n<p>There are different schools of thought on what should be put into global state.  Some popular libraries like Redux suggest putting all state into the global state.  Though there are advantages to doing this, it is my opinion that only state that needs to be shared amongst components should be put in the global state.  React does local state well and if that state is only used by that component then it should stay in that component.  Putting all state into the global state can make global state get huge and defeat the purpose of having component based architecture. Treble works with the idea that app state is best managed as a combination of local and global state.</p>\n</blockquote>\n<h4 id=\"create-store\" style=\"position:relative;\"><a href=\"#create-store\" aria-label=\"create store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Store</h4>\n<p>To setup a Treble Store in your app create <code class=\"language-text\">Store.js</code> at the top level of your app folder structure. In <code class=\"language-text\">Store.js</code> you will import the function <code class=\"language-text\">createStore</code> from <code class=\"language-text\">treble-gsm</code>.  Assign <code class=\"language-text\">createStore</code> to a variable called <code class=\"language-text\">Store</code>. Example Below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Store<span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"add-state-objects-to-store\" style=\"position:relative;\"><a href=\"#add-state-objects-to-store\" aria-label=\"add state objects to store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add State Objects to Store</h4>\n<p>The <code class=\"language-text\">createStore</code> function takes an array of objects as it's parameter.  Each object has an <code class=\"language-text\">action</code> property and a <code class=\"language-text\">state</code> property.\nThe <code class=\"language-text\">action</code> property acts as a string key identifier that allows Treble to identify which state to manage when the Store is subscribed to.  The <code class=\"language-text\">state</code> property takes an object key value pair that will hold the global state property and default value. Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        action<span class=\"token operator\">:</span> <span class=\"token string\">'updatePokemon'</span><span class=\"token punctuation\">,</span>\n        state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> pokemon<span class=\"token operator\">:</span> <span class=\"token string\">'Mewtwo'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        action<span class=\"token operator\">:</span> <span class=\"token string\">'updatePokemonGame'</span><span class=\"token punctuation\">,</span>\n        state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> pokemonGame<span class=\"token operator\">:</span> <span class=\"token string\">'Pokemon Red'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Store<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"treble-container\" style=\"position:relative;\"><a href=\"#treble-container\" aria-label=\"treble container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Treble Container</h3>\n<p>The <code class=\"language-text\">Treble</code> component container is the context provider that gives nested components access to global state. Import <code class=\"language-text\">Treble</code> into your <code class=\"language-text\">App.js</code> or <code class=\"language-text\">Index.js</code> and wrap around components. <code class=\"language-text\">Treble</code> has a prop called <code class=\"language-text\">store</code>. Import <code class=\"language-text\">Store</code> from <code class=\"language-text\">Store.js</code> into the page and pass it to the <code class=\"language-text\">store</code> prop. Example Below.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span>  React  <span class=\"token keyword\">from</span>  <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span>  Treble  <span class=\"token keyword\">from</span>  <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span>  Store  <span class=\"token keyword\">from</span>  <span class=\"token string\">'./Store'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Treble</span></span> <span class=\"token attr-name\">store</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Store<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Components */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Treble</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span>  <span class=\"token keyword\">default</span>  App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Treble is now setup in your app! Easy as Sugar Creme Pie!</p>","excerpt":"It is Treble's goal to provide an easy and quick setup.  Below are the steps needed to get Treble setup in your app, so you can start…","frontmatter":{"date":"2019-05-04","path":"/api/setup","title":"Setup","subMenu":[{"text":"Install","path":"#install"},{"text":"Treble Store","path":"#treble-store"},{"text":"Treble Container","path":"#treble-container"}]}}},"pageContext":{}}}