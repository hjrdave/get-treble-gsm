{"componentChunkName":"component---src-templates-post-template-jsx","path":"/api/toggle-state","result":{"data":{"markdownRemark":{"html":"<p>There are many times when creating features for our apps that we need a simple on and off functionality. An example being a dark mode switch for our app or website. State would hold a boolean value and change back and forth depending on when the switch is clicked, which could add a dark-mode class to the app based on if the state was true or false.  </p>\n<p>Treble has a built in feature to help toggle state without having to recreate logic every time it needs to be implemented.</p>\n<h4 id=\"create-a-toggleable-state\" style=\"position:relative;\"><a href=\"#create-a-toggleable-state\" aria-label=\"create a toggleable state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a Toggleable State</h4>\n<p>Lets start by adding a <code class=\"language-text\">darkMode</code> state object into our Store. Example Below</p>\n<blockquote>\n<p>In order for state to be toggleable it must be a boolean value. </p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createStore<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> <span class=\"token string\">'darkMode'</span><span class=\"token punctuation\">,</span>\n    state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>darkMode<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"toggle-state-with-updatestore\" style=\"position:relative;\"><a href=\"#toggle-state-with-updatestore\" aria-label=\"toggle state with updatestore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Toggle State with updateStore</h4>\n<p>The <code class=\"language-text\">updateStore</code> function is used to toggle a state object.  Along with the <code class=\"language-text\">action</code>, <code class=\"language-text\">value</code>, and <code class=\"language-text\">dispatch</code> parameters, <code class=\"language-text\">updateStore</code> also takes a 4th parameter. The 4th parameter is an options object that takes different key value pairs. Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>key<span class=\"token operator\">:</span> value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To enable the toggle feature in <code class=\"language-text\">updateStore</code> the property <code class=\"language-text\">toggle</code> will be set to <code class=\"language-text\">true</code>. Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>toggle<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we can use <code class=\"language-text\">updateStore</code> to toggle the state value of <code class=\"language-text\">darkMode</code> from <code class=\"language-text\">true</code> to <code class=\"language-text\">false</code>.</p>\n<blockquote>\n<h5 id=\"note-about-the-value-property\" style=\"position:relative;\"><a href=\"#note-about-the-value-property\" aria-label=\"note about the value property permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Note About the Value Property</h5>\n<p>Setting the <code class=\"language-text\">toggle</code> property to <code class=\"language-text\">true</code> is not enough.  In order for the <code class=\"language-text\">updateStore</code> function to keep track of the toggle value, the toggleable state must be passed to the <code class=\"language-text\">value</code> property as well. In this case the <code class=\"language-text\">value</code> property is going to equal the <code class=\"language-text\">darkMode</code> state.</p>\n</blockquote>\n<h4 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h4>\n<p>Below is an example to demonstrate this feature. In the example there is a body tag with a conditional statement that adds the class <code class=\"language-text\">.darkMode</code> if the prop <code class=\"language-text\">darkMode</code> is <code class=\"language-text\">true</code> and then removes the class if the prop is <code class=\"language-text\">false</code>. A button element has an onClick handler with the <code class=\"language-text\">updateStore(&#39;darkMode&#39;, darkMode, dispatch, {toggle: true})</code> attached to it. When the button is clicked <code class=\"language-text\">updateStore</code> will now toggle the darkMode state to the opposite boolean value. Now you have a state value that is easily toggled!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>useTreble<span class=\"token punctuation\">,</span> updateStore<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>darkMode<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTreble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>body className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span>darkMode<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'darkMode'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'darkMode'</span><span class=\"token punctuation\">,</span> darkMode<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>toggle<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Toggle<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"There are many times when creating features for our apps that we need a simple on and off functionality. An example being a dark mode switch…","frontmatter":{"date":"March 06, 2020","path":"/api/toggle-state","title":"Toggle State","subMenu":[{"text":"Create a Toggleable State","path":"#create-a-toggleable-state"},{"text":"Toggle State with updateStore","path":"#toggle-state-with-updatestore"}]}}},"pageContext":{}}}