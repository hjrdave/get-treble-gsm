{"componentChunkName":"component---src-components-templates-api-docs-api-docs-jsx","path":"/api/advanced/class-support","result":{"data":{"site":{"siteMetadata":{"apiNavLinks":[{"id":0,"menuItems":[{"id":0,"path":"/api/introduction/what-is-treblegsm","text":"What is TrebleGSM?"},{"id":1,"path":"/api/introduction/getting-started","text":"Getting Started"},{"id":2,"path":"/api/introduction/managing-state","text":"Managing State"}],"section":"Introduction"},{"id":1,"menuItems":[{"id":3,"path":"/api/advanced/how-treble-gsm-works","text":"How TrebleGSM Works"},{"id":4,"path":"/api/advanced/core-concepts","text":"Core Concepts"},{"id":5,"path":"/api/advanced/extending-stores","text":"Extending Stores"},{"id":6,"path":"/api/advanced/scoping-stores","text":"Scoping Stores"},{"id":7,"path":"/api/advanced/persisting-state","text":"Persisting State"},{"id":8,"path":"/api/advanced/managing-lists","text":"Managing Lists"},{"id":9,"path":"/api/advanced/class-support","text":"Class Support"}],"section":"Advanced"},{"id":2,"menuItems":[{"id":10,"path":"/api/middleware/what-is-middleware","text":"What is Middleware?"},{"id":11,"path":"/api/middleware/middleware-data-object","text":"Middleware Data Object"}],"section":"Middleware"},{"id":3,"menuItems":[{"id":12,"path":"/api/modules/what-are-modules","text":"What are Modules?"},{"id":13,"path":"/api/modules/create-a-module","text":"Create a Module"},{"id":14,"path":"/api/modules/api-reference","text":"API Reference"}],"section":"Modules"},{"id":4,"menuItems":[{"id":15,"path":"/api/references/treble-gsm","text":"TrebleGSM"},{"id":16,"path":"/api/references/treble-core","text":"Treble Core"},{"id":17,"path":"/api/references/treble-persist","text":"Treble Persist"},{"id":18,"path":"/api/references/treble-list-manager","text":"Treble List Manager"}],"section":"API References"}]}},"markdownRemark":{"html":"<p>Even though TrebleGSM was created with React Hooks and functional components in mind, it can be used with Class components as well. </p>\n<p>The setup and API for class components differs a little from traditional setup but is still not a difficult process.</p>\n<h3 id=\"connecting-class-components-to-the-store\" style=\"position:relative;\"><a href=\"#connecting-class-components-to-the-store\" aria-label=\"connecting class components to the store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connecting Class Components to the Store</h3>\n<p>TrebleGSM provides a higher-order component called <code class=\"language-text\">withTreble</code>. To learn more about higher-order components click <a href=\"https://reactjs.org/docs/higher-order-components.html\">here</a>. In order for a class component to get access to the Store it needs to be wrapped by the <code class=\"language-text\">withTreble</code> function and then assigned to a new component variable.  This augmented component can then be exported for use. Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>withTreble<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassComp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> TrebleClassComp <span class=\"token operator\">=</span> <span class=\"token function\">withTreble</span><span class=\"token punctuation\">(</span>ClassComp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> TrebleClassComp<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"subscribe-to-the-store\" style=\"position:relative;\"><a href=\"#subscribe-to-the-store\" aria-label=\"subscribe to the store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subscribe to the Store</h3>\n<p>Now that our class component has access to the Store we can subscribe to it.  </p>\n<p>In functional components we are able to use React hooks like <code class=\"language-text\">useTreble</code> to get state data from the Store.  Class components do not support hooks. Fortunately the <code class=\"language-text\">withTreble</code> function passes a prop to the class component called <code class=\"language-text\">getTreble</code>. The <code class=\"language-text\">getTreble</code> prop can be destructured similarly to the <code class=\"language-text\">useTreble</code> hook.  Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> pokemon<span class=\"token punctuation\">,</span> pokemonTrainer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> Store<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>getTreble<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"updating-store-state\" style=\"position:relative;\"><a href=\"#updating-store-state\" aria-label=\"updating store state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Updating Store State</h3>\n<p>After the initial setup of connecting our class component to the Store, updating Store state in a class component is the same as updating the store in a functional component.  Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>withTreble<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassComp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> pokemon<span class=\"token punctuation\">,</span> pokemonTrainer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> Store<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>getTreble<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Store<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updatePokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MewTwo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Update State<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> TrebleClassComp <span class=\"token operator\">=</span> <span class=\"token function\">withTreble</span><span class=\"token punctuation\">(</span>ClassComp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> TrebleClassComp<span class=\"token punctuation\">;</span></code></pre></div>","excerpt":"Even though TrebleGSM was created with React Hooks and functional components in mind, it can be used with Class components as well.  The…","frontmatter":{"date":"2021-01-01","path":"/api/advanced/class-support","title":"Class Support","subMenu":[{"text":"","path":"#"}]}}},"pageContext":{}},"staticQueryHashes":["2047183331","2047183331","3649515864","764694655","764694655"]}