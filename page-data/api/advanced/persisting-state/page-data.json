{"componentChunkName":"component---src-components-templates-api-docs-api-docs-jsx","path":"/api/advanced/persisting-state","result":{"data":{"site":{"siteMetadata":{"apiNavLinks":[{"id":0,"menuItems":[{"id":0,"path":"/api/introduction/what-is-treblegsm","text":"What is TrebleGSM?"},{"id":1,"path":"/api/introduction/getting-started","text":"Getting Started"},{"id":2,"path":"/api/introduction/managing-state","text":"Managing State"}],"section":"Introduction"},{"id":1,"menuItems":[{"id":3,"path":"/api/advanced/how-treble-gsm-works","text":"How TrebleGSM Works"},{"id":4,"path":"/api/advanced/core-concepts","text":"Core Concepts"},{"id":5,"path":"/api/advanced/extending-stores","text":"Extending Stores"},{"id":6,"path":"/api/advanced/scoping-stores","text":"Scoping Stores"},{"id":7,"path":"/api/advanced/persisting-state","text":"Persisting State"},{"id":8,"path":"/api/advanced/managing-lists","text":"Managing Lists"},{"id":9,"path":"/api/advanced/class-support","text":"Class Support"}],"section":"Advanced"},{"id":2,"menuItems":[{"id":10,"path":"/api/middleware/what-is-middleware","text":"What is Middleware?"},{"id":11,"path":"/api/middleware/middleware-data-object","text":"Middleware Data Object"}],"section":"Middleware"},{"id":3,"menuItems":[{"id":12,"path":"/api/modules/what-are-modules","text":"What are Modules?"},{"id":13,"path":"/api/modules/create-a-module","text":"Create a Module"},{"id":14,"path":"/api/modules/api-reference","text":"API Reference"}],"section":"Modules"},{"id":4,"menuItems":[{"id":15,"path":"/api/references/treble-gsm","text":"TrebleGSM"},{"id":16,"path":"/api/references/treble-core","text":"Treble Core"},{"id":17,"path":"/api/references/treble-persist","text":"Treble Persist"},{"id":18,"path":"/api/references/treble-list-manager","text":"Treble List Manager"}],"section":"API References"}]}},"markdownRemark":{"html":"<p>State persistence is state that persists even after the browser refreshes the application.  Traditionally state does not do this.  When your app reloads the current state is refreshed as well. TrebleGSM has an easy way to make sure select state is persisted even after a browser refresh.</p>\n<h3 id=\"install-treble-persist-module\" style=\"position:relative;\"><a href=\"#install-treble-persist-module\" aria-label=\"install treble persist module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Treble Persist Module</h3>\n<p>First you need to install the TrebleGSM module <code class=\"language-text\">treble-persist</code>. For more information on TrebleGSM Modules go <a href=\"http://localhost:8000/api/modules/what-are-modules\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">npm install treble<span class=\"token operator\">-</span>persist</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">yarn add treble<span class=\"token operator\">-</span>persist</code></pre></div>\n<p>After you install it then import it into to your Store.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> TreblePersist <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-persist'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Add it to your Storeâ€™s option.module property.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n    modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        TreblePersist \n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Once this is done your TrebleGSM now has state persistence!</p>\n<h3 id=\"set-state-persistence\" style=\"position:relative;\"><a href=\"#set-state-persistence\" aria-label=\"set state persistence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set State Persistence</h3>\n<p>Add the <code class=\"language-text\">features</code> property to the Store item with the state you want to persist. Add the <code class=\"language-text\">persist</code> property to <code class=\"language-text\">features</code>. Set it to <code class=\"language-text\">true</code> to activate state persistence for that peticular state item. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n          action<span class=\"token operator\">:</span> <span class=\"token string\">'updateUserName'</span><span class=\"token punctuation\">,</span>\n          state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              userName<span class=\"token operator\">:</span> <span class=\"token string\">'Ash Ketchum'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          features<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              persist<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span> \n        modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> TreblePersist <span class=\"token punctuation\">]</span> \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now whenever the browser refreshes it will persist the state even if it is updated to something else. ðŸª„ðŸª„</p>\n<h3 id=\"timeout-persisted-state\" style=\"position:relative;\"><a href=\"#timeout-persisted-state\" aria-label=\"timeout persisted state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Timeout Persisted State</h3>\n<p>You can set a timeout on persisted state. This might be handy if you have need for state to reset to the default value over a period of time. </p>\n<p>Add the property <code class=\"language-text\">persistTimeout</code> to the <code class=\"language-text\">features</code> property. Set the amount of hours the state should persist for.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">features<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> persist<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> persistTimeout<span class=\"token operator\">:</span> <span class=\"token number\">48</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"programmically-clear-persisted-state\" style=\"position:relative;\"><a href=\"#programmically-clear-persisted-state\" aria-label=\"programmically clear persisted state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Programmically Clear Persisted State</h3>\n<p>You can clear persisted state manually by calling a Store method.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>State<span class=\"token punctuation\">,</span> Store<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTreble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pass the state name as a string to <code class=\"language-text\">Store.clearPersist</code> and call it to clear persisted state. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Store<span class=\"token punctuation\">.</span><span class=\"token function\">clearPersist</span><span class=\"token punctuation\">(</span><span class=\"token string\">'userName'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>Note about persisting state: Treble persist saves an instance of your state to local storage and then hydrates the Store when your app reloads. This is how state is able to survive during reloads.</p>\n</blockquote>","excerpt":"State persistence is state that persists even after the browser refreshes the application.  Traditionally state does not do this.  When yourâ€¦","frontmatter":{"date":"2021-01-01","path":"/api/advanced/persisting-state","title":"Persisting State","subMenu":[{"text":"","path":"#"}]}}},"pageContext":{}},"staticQueryHashes":["2047183331","2047183331","3649515864","764694655","764694655"]}