{"componentChunkName":"component---src-templates-post-template-jsx","path":"/api/list-management","result":{"data":{"markdownRemark":{"html":"<p>Often state will hold an array of state that will be used to render UI lists or other types of data lists. I believe it is important to have a simple and easy way to manage groups of data without having to rewrite code everytime functionality is needed. List management is a middleware module that is built into Treble that will handle arrays of state through a simple api.</p>\n<h4 id=\"append-state\" style=\"position:relative;\"><a href=\"#append-state\" aria-label=\"append state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Append State</h4>\n<p>You might have an array of objects in state.  Lets say each object is a todo item. It has an id, title, and due date property.  We want to add another todo item to our todo list (array). Under normal circumstances we would need to get the entire todo list and append the new item to it and then redispatch the entire todo list (object array) to the store.  This works fine but doing this repetiviely thoughout our app can cause us to rewrite the same code over and over agian. </p>\n<p>Instead of doing this we can use an <code class=\"language-text\">updateStore</code> <strong>option</strong> called <code class=\"language-text\">append</code> to just <em>append</em> the single todo to our current store list. </p>\n<p>A store is created that has our todo state object with two todo list items.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> <span class=\"token string\">'updateTodos'</span>\n    state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      todos<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">,</span>\n          title<span class=\"token operator\">:</span> <span class=\"token string\">'Time to update the Foo'</span><span class=\"token punctuation\">,</span>\n          dueDate<span class=\"token operator\">:</span> <span class=\"token string\">'Tomorrow'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1235</span><span class=\"token punctuation\">,</span>\n          title<span class=\"token operator\">:</span> <span class=\"token string\">'Time to update more Foo'</span><span class=\"token punctuation\">,</span>\n          dueDate<span class=\"token operator\">:</span> <span class=\"token string\">'Thursday'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>We want to <em>append</em> another todo item to this current list. A new todo item is created and attached to an object.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> newTodo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token number\">1236</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'Time to finish all the Foo'</span><span class=\"token punctuation\">,</span>\n  dueDate<span class=\"token operator\">:</span> <span class=\"token string\">'Friday'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>A button can be created to add this new todo to the store.  The onClick handler will set off an <code class=\"language-text\">updateStore</code> dispatch with the <code class=\"language-text\">append</code> option set to true.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateTodo'</span><span class=\"token punctuation\">,</span> newTodo<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>append<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Add Todo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p>And tada the todo list is not overwritten, instead the <code class=\"language-text\">newTodo</code> has been appended to the list. If the <code class=\"language-text\">todos</code> state is outputed it would now look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//new state</span>\n<span class=\"token comment\">/*[\n    {\n      id: 1234,\n      title: 'Time to update the Foo',\n      dueDate: 'Tomorrow'\n    },\n    {\n      id: 1235,\n      title: 'Time to update more Foo',\n      dueDate: 'Thursday'\n    },\n    {\n      id: 1236,\n      title: 'Time to finish all the Foo',\n      dueDate: 'Friday'\n    }\n]*/</span></code></pre></div>\n<h4 id=\"prepend-state\" style=\"position:relative;\"><a href=\"#prepend-state\" aria-label=\"prepend state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prepend State</h4>\n<p>Prepending state is similar to appending state. Instead of appending the new state item to the end of the list it will prepend it to the top. Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> newTodo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token number\">1236</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'Time to finish all the Foo'</span><span class=\"token punctuation\">,</span>\n  dueDate<span class=\"token operator\">:</span> <span class=\"token string\">'Friday'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateTodos'</span><span class=\"token punctuation\">,</span> newTodo<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>prepend<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Add Todo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p>The <code class=\"language-text\">newTodo</code> is now prepended to our todo list. The new output will look like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//new state</span>\n<span class=\"token comment\">/*[\n   {\n      id: 1236,\n      title: 'Time to finish all the Foo',\n      dueDate: 'Friday'\n    },\n    {\n      id: 1234,\n      title: 'Time to update the Foo',\n      dueDate: 'Tomorrow'\n    },\n    {\n      id: 1235,\n      title: 'Time to update more Foo',\n      dueDate: 'Thursday'\n    }\n]*/</span></code></pre></div>\n<h4 id=\"limit-list-length\" style=\"position:relative;\"><a href=\"#limit-list-length\" aria-label=\"limit list length permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Limit List Length</h4>\n<p>Along with appending and prepending state to a list you can set a limit on the list. This will effectively remove list objects as new ones are added. The items removed will depend on the whether the option <code class=\"language-text\">append</code> or <code class=\"language-text\">prepend</code> is being used with the state dispatch. Examples below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//state objects with the lowest index will be removed when limit is reached.</span>\n<span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateTodos'</span><span class=\"token punctuation\">,</span> newTodo<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>append<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> limit<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//state objects with the highest index will be removed when limit is reached.</span>\n<span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateTodos'</span><span class=\"token punctuation\">,</span> newTodo<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>prepend<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> limit<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<h4 id=\"remove-state\" style=\"position:relative;\"><a href=\"#remove-state\" aria-label=\"remove state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove State</h4>\n<p>Removing a state object from a list is super easy with the <code class=\"language-text\">remove</code> option. This action is different from <code class=\"language-text\">append</code> and <code class=\"language-text\">prepend</code> in that the dispatched value is what will be removed from the list. The API for this is <code class=\"language-text\">updateStore(action, [value to be removed], dispatch, options)</code>. Example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//Current Todos state</span>\n<span class=\"token comment\">/*\n[\n   {\n      id: 1236,\n      title: 'Time to finish all the Foo',\n      dueDate: 'Friday'\n    },\n    {\n      id: 1234,\n      title: 'Time to update the Foo',\n      dueDate: 'Tomorrow'\n    },\n    {\n      id: 1235,\n      title: 'Time to update more Foo',\n      dueDate: 'Thursday'\n    }\n]\n*/</span>\n<span class=\"token keyword\">const</span> removeTodo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'Time to update the Foo'</span><span class=\"token punctuation\">,</span>\n  dueDate<span class=\"token operator\">:</span> <span class=\"token string\">'Tomorrow'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateTodos'</span><span class=\"token punctuation\">,</span> removeTodo<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>remove<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Remove Todo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p>When the button is clicked it will take the <code class=\"language-text\">removeTodo</code> object and see if it can find a match in the Todos list. When it finds a match it will remove that object from the Todos list.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//New Todos list</span>\n<span class=\"token comment\">/*\n[\n   {\n      id: 1236,\n      title: 'Time to finish all the Foo',\n      dueDate: 'Friday'\n    },\n    {\n      id: 1235,\n      title: 'Time to update more Foo',\n      dueDate: 'Thursday'\n    }\n]\n*/</span></code></pre></div>\n<blockquote>\n<h4 id=\"a-note-on-removing-state\" style=\"position:relative;\"><a href=\"#a-note-on-removing-state\" aria-label=\"a note on removing state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Note on Removing State</h4>\n<p>The <code class=\"language-text\">remove</code> state option is a very handy feature, but there is caveat. The list items must all be unique. Treble compares the entire object property values and if there\nis a match that state will be removed. There needs to be at least one unique value in each object. This could an unique id or key.</p>\n</blockquote>","excerpt":"Often state will hold an array of state that will be used to render UI lists or other types of data lists. I believe it is important to have…","frontmatter":{"date":"2020-15-5","path":"/api/list-management","title":"List Management","subMenu":[{"text":"Append State","path":"#append-state"},{"text":"Prepend State","path":"#prepend-state"},{"text":"Limit List Length","path":"#limit-list-length"},{"text":"Remove State","path":"#remove-state"}]}}},"pageContext":{}}}