{"componentChunkName":"component---src-templates-post-template-jsx","path":"/api/state-persistence","result":{"data":{"markdownRemark":{"html":"<p>React state only exists in the initial instance of your app.  If your app reloads then state is reset to its default value. This can cause issues when state needs to be saved outside of the app instance.  Treble allows the Store to save state to the browser's local storage when specified.</p>\n<h4 id=\"set-state-persistence\" style=\"position:relative;\"><a href=\"#set-state-persistence\" aria-label=\"set state persistence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set State Persistence</h4>\n<p>Create a new property called <code class=\"language-text\">features</code> in the Store object you want to persist state.  Assign <code class=\"language-text\">features</code> an object with a property of <code class=\"language-text\">persist</code>.  If you set <code class=\"language-text\">persist</code> to <code class=\"language-text\">true</code> it will save that Store object's state to browser local storage everytime it changes. See example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    action<span class=\"token operator\">:</span> <span class=\"token string\">'updatePokemon'</span><span class=\"token punctuation\">,</span>\n    state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> pokemon<span class=\"token operator\">:</span> <span class=\"token string\">'Mewtwo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    features<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        persist<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now whenever the browser is refreshed Treble will make sure the last state persists on render.</p>\n<h4 id=\"clear-local-storage\" style=\"position:relative;\"><a href=\"#clear-local-storage\" aria-label=\"clear local storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Clear Local Storage</h4>\n<p>There might be some cases where you need the persited state to reset. You can do this by calling the <code class=\"language-text\">clearPersist</code> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> clearPersist <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'treble-gsm'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">clearPersist</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">clearPersist</code> takes a string that is the name of the parameter.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">clearPersist</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Clear from Local Storage</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>When this function is called it will delete the browser local storage instance of that state.</p>","excerpt":"React state only exists in the initial instance of your app.  If your app reloads then state is reset to its default value. This can causeâ€¦","frontmatter":{"date":"May 04, 2019","path":"/api/state-persistence","title":"State Persistence","subMenu":[{"text":"Set State Persistence","path":"#set-state-persistence"},{"text":"Clear Local Storage","path":"#clear-local-storage"}]}}},"pageContext":{}}}