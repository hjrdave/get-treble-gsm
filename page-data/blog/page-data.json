{"componentChunkName":"component---src-pages-blog-jsx","path":"/blog/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"28acef86-8386-5ae4-9e25-9345f4dcaf8b","excerpt":"Getting Started As React apps scale, managing state can become complicated and hard to maintain. Even though React.js manages local state well, when state needs to be shared amongst components, methods like prop-drilling must be used.  Prop-drilling…","frontmatter":{"date":"March 06, 2020","path":"/docs/getting-started","title":"Getting Started"}}},{"node":{"id":"6b91c983-acb7-5834-a0f9-f8cadd8a4e6e","excerpt":"History Treble provides an easy way to get the previous state value and to get the original state. Delcare the  object in the  destructured array. Get Previous State The  object keeps track of the previous state and saves it for use. You can access…","frontmatter":{"date":"May 04, 2019","path":"/docs/history","title":"History"}}},{"node":{"id":"2bbf0716-469b-57ac-b8f2-2f3bd030b697","excerpt":"Scoped Global State The primary goal of Treble is to provide a quick setup and easy way to manage global state.  That being said there will always be scenerios where more advance functionality will be needed.  One of these scenerios would be having…","frontmatter":{"date":"May 04, 2019","path":"/docs/scoped-global-state","title":"Scoped Global State"}}},{"node":{"id":"4c7a1c21-50a0-5c7a-8652-62447db498fa","excerpt":"Setup Treble It is Treble's goal to provide and easy and quick setup.  Below are the steps need to get Treble setup in your app, so you can start to managing state like a boss. Install Treble First install Treble in your app.  You can get more…","frontmatter":{"date":"May 04, 2019","path":"/docs/setup-treble","title":"Setup Treble"}}},{"node":{"id":"eda61a6f-eaa5-5be0-a5db-9306fffa295e","excerpt":"State Persistence Treble allows the Store to save state to browser local storage if specified. In the optional  parameter, in the Store state object, set  to . See example below. Now whenever the browser is refreshed Treble will make sure the last…","frontmatter":{"date":"May 04, 2019","path":"/docs/state-persistence","title":"State Persistence"}}},{"node":{"id":"c9970781-6554-5e09-bcf7-74dc9192e7be","excerpt":"Support If you would like to support, contribute, or submit issues and feature requests. please do! :) My hope is to get more community involvement in this project to help grow and maintain it. For more information about me. Visit my personal website…","frontmatter":{"date":"May 04, 2019","path":"/docs/support","title":"Support"}}},{"node":{"id":"88567170-73a7-5c5a-93f4-b06ff5b16a4b","excerpt":"Subscribe and Update Once global state is setup in your app, we will want our components to be able to read and manipulate the state from the Treble Store. Treble has a simple and straightforward API for subscribing to and updating state in the Store…","frontmatter":{"date":"May 04, 2019","path":"/docs/subscribe-and-update","title":"Subscribe and Update"}}}]}},"pageContext":{}}}