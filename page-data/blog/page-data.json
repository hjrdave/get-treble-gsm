{"componentChunkName":"component---src-pages-blog-index-jsx","path":"/blog/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"e2c5f09d-cb61-5bd2-ada4-d176f7b6f69a","excerpt":"Often developers will need to manage an array of state that will be used to render UI lists or other types of data lists. I believe it is important to have a simple and easy way to manage groups of data without having to rewrite code everytime…","frontmatter":{"date":"2020-2-7","path":"/api/managing-lists","title":"Managing Lists"}}},{"node":{"id":"ec644af3-7bdc-5985-825f-bd7bb0d74ade","excerpt":"As your app grows so does global state, which in can make the Store get hard to navigate and maintain.  Extending the Treble Store is a feature that allows seperate and external Stores to be included in another Store. This means we can break up a…","frontmatter":{"date":"2020-15-5","path":"/api/extending-the-store","title":"Extending the Store"}}},{"node":{"id":"2c9c36b2-e5ec-56f8-b233-e9216800720f","excerpt":"V1.3.0 and down dispatch  is destructured from the  hook and passed to  to subscribe to the . It has been deprecated in favor of the SubscribeAPI  object. updateStore  is used to subscribe to the  and manage state. It has been deprecated in favor of…","frontmatter":{"date":"2020-15-5","path":"/api/deprecated","title":"Deprecated API"}}},{"node":{"id":"ec6a80ec-4924-5e75-b02a-263db53a175a","excerpt":"Why Global State? As React apps scale, managing state can become complicated and hard to maintain. Even though React.js manages local state well, when state needs to be shared amongst components, methods like prop-drilling and lifting up state must…","frontmatter":{"date":"2020-03-06","path":"/api/introduction","title":"Introduction "}}},{"node":{"id":"0a781abb-98c2-502d-9e8e-83b4ea7da3c0","excerpt":"There are many times when creating features for our apps that we need a simple on and off functionality. An example being a dark mode switch for our app or website. State would hold a boolean value and change back and forth depending on when the…","frontmatter":{"date":"2020-03-06","path":"/api/toggle-state","title":"Toggle State"}}},{"node":{"id":"9d6720a3-6d3c-5912-a82c-de1d49c896ab","excerpt":"Middleware provides a way for 3rd party functions to be called after state is dispatched and before it is saved back to the Store. You can use it for calling API's, logging, transforming state, or even to check dispatched state values before they are…","frontmatter":{"date":"2020-03-06","path":"/api/middleware","title":"Middleware"}}},{"node":{"id":"15a618c1-6d7a-5977-a422-a150f90dc861","excerpt":"Even though Treble was created with React Hooks and functional components in mind, it is still important to provide support for class components.  The setup and API for class components differs a little from the traditional setup but is still not…","frontmatter":{"date":"2020-03-06","path":"/api/class-components","title":"Class Components"}}},{"node":{"id":"7cbd43f0-90b9-5827-bfbf-0dce2c35804f","excerpt":"v2.0.0-beta Major release with breaking changes. Release Notes: updateStore utility function deprecated and removed New SubscribeAPI finalized Methods Store.reset added v1.3.0 Release Notes: Experimental SubscribeAPI updateStore deprecation warning v…","frontmatter":{"date":"2020-03-06","path":"/api/changelog","title":"Changelog"}}},{"node":{"id":"13446881-f09f-577c-9c58-e14e98bbc1f6","excerpt":"The TrebleGSM SubscribeAPI was introduced in V2 to access and manage state in the Store. V1.3 and down Versions prior to V2 use the  utility function to manage state. For documentation on this go here. You can access the SubscribeAPI object with the…","frontmatter":{"date":"2020-02-07","path":"/api/index/subscribe-api","title":"SubscribeAPI"}}},{"node":{"id":"0578554d-e18c-596b-a3a7-f1994d81ad77","excerpt":"Treble provides an easy way to get previous and original state values. Every Store has a built in History object that tracks state changes.  Note About the History Object The word history is reserved in Treble and should not be used as an identifier…","frontmatter":{"date":"2019-05-04","path":"/api/history","title":"History"}}},{"node":{"id":"dd7e9888-3426-52a1-b170-52638faaad49","excerpt":"If you would like to support, contribute, or submit issues and feature requests. please do! :) My hope is to get more community involvement in this project to help grow and maintain it. For more information about me. Visit my personal website.","frontmatter":{"date":"2019-05-04","path":"/api/support","title":"Support"}}},{"node":{"id":"c2876c46-d9bd-50b3-a498-65853ad11ba2","excerpt":"It is Treble's goal to provide an easy and quick setup.  Below are the steps needed to get Treble setup in your app, so you can start managing state like a boss. Install First install Treble in your app.  You can get more information about this…","frontmatter":{"date":"2019-05-04","path":"/api/setup","title":"Setup"}}},{"node":{"id":"1c70c6c6-64f1-5269-b1f5-9326c2680558","excerpt":"React state only exists in the initial instance of your app.  If your app reloads then state is reset to its default value. This can cause issues when state needs to be saved outside of the app instance.  Treble allows the Store to save state to the…","frontmatter":{"date":"2019-05-04","path":"/api/state-persistence","title":"State Persistence"}}},{"node":{"id":"b07be852-0f56-567b-a6b1-fd273360c245","excerpt":"Once global state is setup in your app, we will want our components to be able to read and manipulate the state from the Store. Treble has a simple and straightforward API for subscribing to and updating state in the Store. Subscribing to the Store…","frontmatter":{"date":"2019-05-04","path":"/api/manage-state","title":"Manage State"}}},{"node":{"id":"997550b1-590a-5d48-a732-e9649e949c76","excerpt":"Creating complex React components like widgets can make state hard to maintain.  Especially when there are many nested components that need to pass state data to each other. Treble was created with the idea that the best part of React is it's…","frontmatter":{"date":"2019-05-04","path":"/api/scoped-global-state","title":"Scoped Global State"}}}]}},"pageContext":{}}}